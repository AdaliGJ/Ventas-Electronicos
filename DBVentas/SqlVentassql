CREATE TABLE prueba(
    id_prueba NUMBER(11) GENERATED BY DEFAULT ON NULL AS IDENTITY(start with 1 increment by 1),
    valor_1 number(11) NOT NULL,
    valor_2 VARCHAR(50) NOT NULL,
    PRIMARY KEY(id_prueba)
);

drop table prueba;

ALTER TABLE prueba MODIFY id_prueba NUMBER(11) GENERATED BY DEFAULT ON NULL AS IDENTITY (START with 1 INCREMENT by 1) ;

insert into prueba( id_prueba, valor_1,valor_2) values ( null,2,'123abc');

select * from prueba;

rollback;

commit;

select * from tipo_usuarios;
select * from usuarios;


CREATE TABLE tipo_usuarios(
    id_tipo_usuario NUMBER(11) GENERATED BY DEFAULT ON NULL AS IDENTITY(start with 1 increment by 1),
    nombre VARCHAR(30) NOT NULL,
    PRIMARY KEY(id_tipo_usuario)
);

insert into tipo_usuarios( id_tipo_usuario, nombre) values ( null,'Cliente individual');


CREATE TABLE dispositivos_individuales(
    serie_dispositivo NUMBER(20) GENERATED BY DEFAULT ON NULL AS IDENTITY(start with 1 increment by 1),
    id_inventario NUMBER(11) NOT NULL,
    PRIMARY KEY(serie_dispositivo)
);

drop table dispositivos_individuales;

insert into dispositivos_individuales(serie_dispositivo, id_inventario) values ( null,456);

ALTER TABLE INVENTARIO 
ADD (MESES_GARANTIA INT NOT NULL);

CREATE OR REPLACE TRIGGER INVENTARIO_TRG 
BEFORE INSERT ON INVENTARIO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
;



select * from Tipo_usuarios;


insert into inventario(
        id_inventario, 
        categoria_dispositivo,
        marca,
        existencias,
        precio_lista,
        color,
        descripcion,
        modelo,
        meses_garantia)
        
        values(
        null,
        1,
        41,
        100,
        49.5,
        'rojo',
        'compu rapida',
        'ABC123',
        12
        );


CREATE SEQUENCE INVENTARIO_SEQ1;

Drop trigger inventario_trg1;

CREATE TRIGGER INVENTARIO_TRG1 
BEFORE INSERT ON INVENTARIO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_INVENTARIO IS NULL THEN
      SELECT INVENTARIO_SEQ1.NEXTVAL INTO :NEW.ID_INVENTARIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


select * from Marcas;

insert into marcas(id_marca,nombre) values(null, 'HP');

commit;

select * from tipo_dispositivo order by id_tipo_dispositivo;

Insert into SYSTEM.TIPO_DISPOSITIVO (ID_TIPO_DISPOSITIVO,NOMBRE) values ('1','Televisor');
Insert into SYSTEM.TIPO_DISPOSITIVO (ID_TIPO_DISPOSITIVO,NOMBRE) values ('2','Videojuego');
Insert into SYSTEM.TIPO_DISPOSITIVO (ID_TIPO_DISPOSITIVO,NOMBRE) values ('3','Smartwatch');
Insert into SYSTEM.TIPO_DISPOSITIVO (ID_TIPO_DISPOSITIVO,NOMBRE) values ('4','Computadora');
Insert into SYSTEM.TIPO_DISPOSITIVO (ID_TIPO_DISPOSITIVO,NOMBRE) values ('5','Monitor');
Insert into SYSTEM.TIPO_DISPOSITIVO (ID_TIPO_DISPOSITIVO,NOMBRE) values ('6','Celular');
Insert into SYSTEM.TIPO_DISPOSITIVO (ID_TIPO_DISPOSITIVO,NOMBRE) values ('7','Equipo de Sonido');





CREATE SEQUENCE ORDENES_COMPRA_SEQ;

CREATE TRIGGER ORDENES_COMPRA_TRG 
BEFORE INSERT ON ORDENES_COMPRA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_ORDEN IS NULL THEN
      SELECT ORDENES_COMPRA_SEQ.NEXTVAL INTO :NEW.ID_ORDEN FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


select * from tipo_clientes;



ALTER TABLE USUARIOS RENAME COLUMN CONTRASE��A TO PASSWORD;

CREATE OR REPLACE TRIGGER USUARIOS_TRG 
BEFORE INSERT ON USUARIOS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/

select * from usuarios;



CREATE SEQUENCE USUARIOS_SEQ1;

Drop trigger Usuarios_trg1;



CREATE TRIGGER USUARIOS_TRG1 
BEFORE INSERT ON USUARIOS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_USUARIO IS NULL THEN
      SELECT USUARIOS_SEQ1.NEXTVAL INTO :NEW.ID_USUARIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/





ALTER TABLE USUARIOS  
MODIFY (ID_USUARIO INT );

ALTER TABLE USUARIOS  
MODIFY (TIPO_USUARIO INT );


CREATE OR REPLACE VIEW CATALOGO
AS select tdi."IDTIPODISPOSITIVO",tdi."TIPODISPOSITIVO",tdi."IDINVENTARIO",tdi."CATEGORIADISPOSITIVO",tdi."MARCA",tdi."EXISTENCIAS",tdi."PRECIOLISTA",tdi."COLOR",tdi."DESCRIPCION",tdi."MODELO",tdi."MESESGARANTIA", m.nombre nombremarca from (select td.id_tipo_dispositivo idtipodispositivo, td.nombre tipodispositivo , i.id_inventario idinventario, i.categoria_dispositivo categoriadispositivo, i.marca, i.existencias, i.precio_lista preciolista, i.color, i.descripcion, i.modelo, i.meses_garantia mesesgarantia 
from tipo_dispositivo td 
inner join inventario i on td.id_tipo_dispositivo=i.categoria_dispositivo) tdi 
inner join marcas m on tdi.marca = m.id_marca;


DROP VIEW DISPOSITIVOS_VENDIDOS;

CREATE VIEW DISPOSITIVOSVENDIDOS
AS select vc.serie, vc.fecha, vc.id_propietario idpropietario, vc.nombre_propietario nombrepropietario, di.id_inventario dispositivo from (select v.serie, v.fecha, cs.* 
from (select fc.id_cliente id_propietario, fc.nombre nombre_propietario, o.id_orden from fichas_clientes fc 
inner join ordenes_compra o on fc.id_cliente=o.id_cliente) cs 
inner join ventas v on cs.id_orden=v.id_orden) vc 
inner join dispositivos_individuales di on di.serie_dispositivo = vc.serie; la 2



DROP VIEW INFO_CLIENTE;

CREATE VIEW INFOCLIENTE
AS select cs."ID_CLIENTE" idcliente ,cs."TIPO_CLIENTE" tipocliente,cs."NOMBRE_TIPO_CLIENTE" nombretipocliente, fc.patente_de_comercio patente,fc.fecha_de_vencimiento vencimiento, fc.nombre nombrecliente, fc.nit 
from (select c.id_cliente, c.tipo_cliente, tc.nombre nombre_tipo_cliente from clientes c 
inner join tipo_clientes tc on c.tipo_cliente=tc.id) cs 
inner join fichas_clientes fc on fc.id_cliente = cs.id_cliente;



CREATE OR REPLACE VIEW IMGS
AS select i.tipodispositivo tipodispositivo, i.nombremarca, i.preciolista preciolista, i.modelo, i.idinventario, i.descripcion, d.imagen 
from catalogo i 
inner join imagenes_dispositivos d on i.idinventario=d.id_inventario;



select * from  clientes;

ALTER TABLE CLIENTES 
DROP COLUMN PASSWORD;

ALTER TABLE CLIENTES RENAME COLUMN ID_CLIENTE TO NIT;

CREATE OR REPLACE TRIGGER CLIENTES_TRG 
BEFORE INSERT ON CLIENTES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/


ALTER TABLE FICHAS_CLIENTES
ADD CONSTRAINT FICHAS_CLIENTES_FK2 FOREIGN KEY
(
  NIT 
)
REFERENCES CLIENTES
(
  NIT 
)
ENABLE;






select * from fichas_clientes;

select * from Tipo_usuarios;

insert into usuarios(id_usuario,tipo_usuario,password,nombre)
values (Null, 1,'abc123','Juan');

